{"version":3,"sources":["components/Authorize/Login/Register/Register.jsx","redux/actions/loginActions.js","redux/constants.js","components/Authorize/Login/SignIn/SignIn.jsx","components/Authorize/Login/SignIn/SignInContainer.js","components/Authorize/Login/Login.jsx","components/Authorize/Authorize.jsx","PrivateRoute.js","redux/reducers/loginReducers.js","redux/reducers/taskReducers.js","redux/reducers/rootReducer.js","redux/actions/taskListActions.js","components/TaskList/TaskSection/SectionOptions/SectionOptions.jsx","components/TaskList/TaskSection/SectionOptions/SectionOptionsContainer.jsx","components/TaskList/TaskSection/SectionEdit/SectionEdit.jsx","components/TaskList/TaskSection/SectionEdit/SectionEditContainer.jsx","components/TaskList/TaskSection/AddTaskForm/AddTaskForm.jsx","components/TaskList/TaskSection/AddTaskForm/AddTaskFormContainer.jsx","components/TaskList/TaskSection/TaskItem/TaskEdit/TaskEdit.jsx","components/TaskList/TaskSection/TaskItem/TaskEdit/TaskEditContainer.jsx","components/TaskList/TaskSection/TaskItem/TaskItem.jsx","components/TaskList/TaskSection/TaskItem/TaskItemContainer.jsx","components/TaskList/TaskSection/TaskSection.jsx","components/TaskList/TaskSection/TaskSectionContainer.jsx","components/TaskList/TaskListForm/TaskListForm.jsx","components/TaskList/TaskListForm/TaskListFormContainer.jsx","components/TaskList/TaskList.jsx","components/TaskList/TaskListContainer.jsx","App.js","index.js"],"names":["Register","state","firstName","lastName","login","password","inputHandler","e","setState","target","name","value","addUser","preventDefault","props","onSubmit","this","className","htmlFor","type","onChange","placeholder","Component","connect","user","sections","id","Date","now","SignIn","signIn","authorizeUser","status","to","online","Login","register","switchToLogin","switchToRegister","onClick","Authorize","component","rest","render","defaultState","users","chooseCurrent","filter","loginReducer","action","read_cookie","length","alert","bake_cookie","currentUser","delete_cookie","currentFirstName","currentLastName","currentId","updateServer","identifyingCurrent","arr","indexOf","item","removeById","taskReducer","sectionName","tasks","sectionId","push","splice","taskIndex","combineReducers","editTask","SectionOptions","editMode","hideOptions","icon","faPen","deleteSection","faTrash","SectionEdit","inputValue","defaultValue","editSection","confirmEdit","faCheck","faTimes","AddTaskForm","addTask","toggleAddMode","TaskEdit","toggleEdit","TaskItem","toggleEditMode","index","title","Card","CardContent","Typography","variant","deleteTask","TaskSection","add","options","edit","toggleOptions","heading","faEllipsisH","map","TaskListForm","addSection","goToDefault","Button","color","cancelAdd","TaskList","StyledContainer","withStyles","theme","root","display","alignItems","width","breakpoints","down","Container","Avatar","toUpperCase","logOut","faPowerOff","maxWidth","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","basename","exact","path","TaskListContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e38871b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addUser} from '../../../../redux/actions/loginActions';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    login: '',\r\n    password: ''\r\n  }\r\n  inputHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  addUser = (e) => {\r\n    e.preventDefault();\r\n    this.props.addUser(this.state.firstName, this.state.lastName, this.state.login, this.state.password);\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      login: '',\r\n      password: ''\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.addUser} className=\"login__form\">\r\n        <label htmlFor=\"\">\r\n          First name\r\n          <input type=\"text\" name=\"firstName\" className=\"login__input\" onChange={this.inputHandler} value={this.state.firstName} placeholder=\"Name\"/>\r\n        </label>\r\n        <label htmlFor=\"\">\r\n          Last name\r\n          <input type=\"text\" name=\"lastName\" className=\"login__input\" onChange={this.inputHandler} value={this.state.lastName} placeholder=\"Surname\"/>\r\n        </label>\r\n        <label htmlFor=\"\">\r\n          Email\r\n          <input type=\"email\" name=\"login\" className=\"login__input\" onChange={this.inputHandler} value={this.state.login} placeholder=\"Email\"/>\r\n        </label>\r\n        <label htmlFor=\"\">\r\n          Password\r\n          <input type=\"password\" name=\"password\" className=\"login__input\" onChange={this.inputHandler} value={this.state.password} placeholder=\"Password\"/>\r\n        </label>\r\n        <button type=\"submit\" className=\"submit__btn\">Create</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, {addUser})(Register);","import {ADD_USER, AUTHORIZE_USER} from '../constants';\r\n\r\nexport const addUser = (firstName, lastName, login, password) => {\r\n  return {\r\n    type: ADD_USER,\r\n    user: {\r\n      firstName,\r\n      lastName,\r\n      login,\r\n      password,\r\n      sections: [],\r\n      id: Date.now()\r\n    }\r\n  }\r\n}\r\n\r\nexport const authorizeUser = (login, password) => {\r\n  return {\r\n    type: AUTHORIZE_USER,\r\n    login,\r\n    password\r\n  }\r\n}","export const ADD_USER = 'ADD_USER';\r\nexport const AUTHORIZE_USER = 'AUTHORIZE_USER';\r\n\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const ADD_SECTION = 'ADD_SECTION';\r\nexport const DELETE_SECTION = 'DELETE_SECTION';\r\nexport const EDIT_SECTION = 'EDIT_SECTION';\r\n\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {authorizeUser} from '../../../../redux/actions/loginActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    login: '',\r\n    password: ''\r\n  }\r\n  inputHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  signIn = (e) => {\r\n    e.preventDefault();\r\n    this.props.authorizeUser(this.state.login, this.state.password);\r\n    this.setState({\r\n      login: '',\r\n      password: ''\r\n    })\r\n  }\r\n  render() {\r\n    if(!this.props.status) {\r\n      return (\r\n        <form onSubmit={this.signIn} className=\"login__form\">\r\n          <label>\r\n            Login\r\n            <input type=\"email\" name=\"login\" className=\"login__input\" onChange={this.inputHandler} value={this.state.login} placeholder=\"Enter your email\"/>\r\n          </label>\r\n          <label>\r\n            Password\r\n            <input type=\"password\" name=\"password\" className=\"login__input\" onChange={this.inputHandler} value={this.state.password} placeholder=\"Enter your password\"/>\r\n          </label>\r\n          <button type=\"submit\" className=\"submit__btn\">Login</button>\r\n        </form>\r\n      )\r\n    } else {\r\n      return (<Redirect to=\"/dashboard\" />)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, {authorizeUser})(SignIn);","import React from 'react';\r\nimport SignIn from './SignIn';\r\nimport {connect} from 'react-redux';\r\n\r\nconst SignInContainer = (props) => {\r\n  return (\r\n    <SignIn status={props.online}/>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    online: state.login.status\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SignInContainer);","import React, {Component} from 'react';\r\nimport Register from './Register/Register';\r\nimport SignInContainer from './SignIn/SignInContainer';\r\nimport './Login.scss';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    register: false\r\n  }\r\n  switchToLogin = () => {\r\n    this.setState({\r\n      register: false\r\n    })\r\n  }\r\n  switchToRegister = () => {\r\n    this.setState({\r\n      register: true\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <h1 className=\"login__title\">Task Manager</h1>\r\n        <span>For your personal convenience</span>\r\n        <div className=\"login__switcher\">\r\n          <button onClick={this.switchToLogin} className={this.state.register ? \"switcher__btn\" : \"switcher__btn switcher__btn--active\"}>Sign up</button>\r\n          <button onClick={this.switchToRegister} className={this.state.register ? \"switcher__btn switcher__btn--active\" : \"switcher__btn\"}>Create an account</button>\r\n        </div>\r\n        {this.state.register ? <Register /> : <SignInContainer />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from './Login/Login';\r\nimport './Authorize.scss';\r\n\r\nconst Authorize = () => {\r\n  return (\r\n    <div className=\"authorize\">\r\n      <div className=\"authorize__banner\"></div>\r\n      <Login />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Authorize;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, status, ...rest}) => {\r\n  return (\r\n    <Route\r\n    {...rest}\r\n    render={props => {\r\n      return  status ? (<Component />) : (<Redirect to=\"/\" />)\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    status: state.login.status\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import {ADD_USER, AUTHORIZE_USER, LOG_OUT} from '../constants';\r\nimport {bake_cookie, read_cookie, delete_cookie} from 'sfcookies';\r\n\r\n\r\nconst defaultState = {\r\n  users: [],\r\n  status: false\r\n}\r\n\r\nconst chooseCurrent = (state = [], login, password) => {\r\n  return state.filter(user => user.login === login && user.password === password);\r\n}\r\n\r\nconst loginReducer = (state = defaultState, action) => {\r\n  let users = [];\r\n  state.users = read_cookie('users');\r\n  switch(action.type) {\r\n    case ADD_USER:\r\n      if(!state.users.filter(user => user.login === action.user.login).length) {\r\n        users = [...state.users, action.user];\r\n        bake_cookie('users', users);\r\n      } else {\r\n        alert('Already here');\r\n      }\r\n      return {...state, users};\r\n    case AUTHORIZE_USER: \r\n      if(chooseCurrent(state.users, action.login, action.password).length) {\r\n        let currentUser = chooseCurrent(state.users, action.login, action.password)[0];\r\n        bake_cookie('current', currentUser);\r\n        return {...state, status: true};\r\n      } else {\r\n        alert('No users found');\r\n        return state;\r\n      }\r\n    case LOG_OUT: \r\n      delete_cookie('current');\r\n      return {...state, status: action.status};\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default loginReducer;","import {ADD_SECTION, LOG_OUT, DELETE_SECTION, EDIT_SECTION, ADD_TASK, DELETE_TASK, EDIT_TASK} from '../constants';\r\nimport {read_cookie, bake_cookie} from 'sfcookies';\r\n\r\nconst defaultState = {\r\n  sections: [],\r\n  currentFirstName: '',\r\n  currentLastName: '',\r\n  currentId: ''\r\n}\r\n\r\nconst updateServer = (state, sections) => {\r\n  let users = read_cookie('users');\r\n  users[identifyingCurrent(users, state.currentId)].sections = sections;\r\n  bake_cookie('users', users);\r\n  bake_cookie('current', users[identifyingCurrent(users, state.currentId)]);\r\n}\r\n\r\nconst identifyingCurrent = (arr, id) => {\r\n  return arr.indexOf(arr.filter(item => item.id === id)[0]);\r\n}\r\n\r\nconst removeById = (arr, id) => {\r\n  return arr.filter(item => item.id !== id);\r\n}\r\n\r\nconst taskReducer = (state = defaultState, action) => {\r\n  let sections = [];\r\n  const currentUser = read_cookie('current');\r\n  state.sections = currentUser.sections;\r\n  state.currentFirstName = currentUser.firstName;\r\n  state.currentLastName = currentUser.lastName;\r\n  state.currentId = currentUser.id;\r\n  switch(action.type) {\r\n    case LOG_OUT: \r\n      return {...state, sections: [], currentFirstName: '', currentLastName: ''};\r\n    case ADD_SECTION:\r\n      if(!action.sectionName) return state;\r\n      sections = [...state.sections, {name: action.sectionName, tasks: [], id: Date.now()}];\r\n      updateServer(state, sections);\r\n      return {...state, sections};\r\n    case DELETE_SECTION:\r\n      sections = removeById(state.sections, action.id);\r\n      updateServer(state, sections);\r\n      return {...state, sections}\r\n    case EDIT_SECTION:\r\n      if(!action.name) return state;\r\n      sections = [...state.sections];\r\n      sections[identifyingCurrent(sections, action.id)].name = action.name;\r\n      updateServer(state, sections);\r\n      return {...state, sections};\r\n    case ADD_TASK:\r\n      if(!action.name) return state;\r\n      sections = [...state.sections];\r\n      sections[identifyingCurrent(sections, action.sectionId)].tasks.push(action.name);\r\n      updateServer(state, sections);\r\n      return {...state, sections};\r\n    case DELETE_TASK:\r\n      sections = [...state.sections];\r\n      sections[identifyingCurrent(sections, action.sectionId)].tasks.splice(action.taskIndex, 1);\r\n      updateServer(state, sections);\r\n      return {...state, sections};\r\n    case EDIT_TASK :\r\n    if(!action.name) return state;\r\n      sections = [...state.sections];\r\n      sections[identifyingCurrent(sections, action.sectionId)].tasks[action.taskIndex] = action.name;\r\n      updateServer(state, sections);\r\n      return {...state, sections};\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default taskReducer;","import { combineReducers } from 'redux';\r\nimport loginReducer from '../reducers/loginReducers';\r\nimport taskReducer from '../reducers/taskReducers';\r\n\r\nexport default combineReducers({\r\n  login: loginReducer,\r\n  tasks: taskReducer\r\n})","import {LOG_OUT, ADD_SECTION, DELETE_SECTION, EDIT_SECTION, ADD_TASK, DELETE_TASK, EDIT_TASK} from '../constants';\r\n\r\nexport const logOut = () => {\r\n  return {\r\n    type: LOG_OUT,\r\n    status: false\r\n  }\r\n}\r\n\r\nexport const addSection = (sectionName) => {\r\n  return {\r\n    type: ADD_SECTION,\r\n    sectionName\r\n  }\r\n}\r\n\r\nexport const deleteSection = (id) => {\r\n  return {\r\n    type: DELETE_SECTION,\r\n    id\r\n  }\r\n}\r\n\r\nexport const editSection = (id, name) => {\r\n  return {\r\n    type: EDIT_SECTION,\r\n    id,\r\n    name\r\n  }\r\n}\r\n\r\nexport const addTask = (sectionId, name) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    sectionId,\r\n    name\r\n  }\r\n}\r\n\r\nexport const deleteTask = (sectionId, taskIndex) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    sectionId,\r\n    taskIndex\r\n  }\r\n}\r\n\r\nexport const editTask = (sectionId, taskIndex, name) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    sectionId,\r\n    taskIndex,\r\n    name\r\n  }\r\n}","import React from 'react';\r\nimport './SectionOptions.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPen, faTrash} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SectionOptions = (props) => {\r\n  return (\r\n    <div className=\"popup__options\">\r\n      <button onClick={() => {\r\n        props.editMode(true);\r\n        props.hideOptions(false)\r\n      }} className=\"option__btn\"><FontAwesomeIcon icon={faPen} className=\"option__icon\"/>Edit</button>\r\n      <button onClick={() => props.deleteSection(props.sectionId)} className=\"option__btn\"><FontAwesomeIcon icon={faTrash} className=\"option__icon\"/>Delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionOptions;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteSection} from '../../../../redux/actions/taskListActions';\r\nimport SectionOptions from './SectionOptions';\r\n\r\nconst SectionOptionsContainer = (props) => {\r\n  return (\r\n    <SectionOptions deleteSection={props.deleteSection} sectionId={props.sectionId} editMode={props.editMode} hideOptions={props.hideOptions}/>\r\n  )\r\n}\r\n\r\nexport default connect(null, {deleteSection})(SectionOptionsContainer);","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes, faCheck} from '@fortawesome/free-solid-svg-icons';\r\nimport './SectionEdit.scss';\r\n\r\nclass SectionEdit extends Component {\r\n  state = {\r\n    inputValue: this.props.defaultValue\r\n  }\r\n  inputHandler = (e) => {\r\n    this.setState({\r\n      inputValue: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <textarea className=\"edit__input\" defaultValue={this.state.inputValue} onChange={this.inputHandler}></textarea>\r\n        <button onClick={() => {\r\n          debugger;\r\n          this.props.editSection(this.props.id, this.state.inputValue);\r\n          this.props.confirmEdit(false);\r\n        }}><FontAwesomeIcon icon={faCheck} /></button>\r\n        <button onClick={() => this.props.confirmEdit(false)}>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </button>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SectionEdit;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {editSection} from '../../../../redux/actions/taskListActions';\r\nimport SectionEdit from './SectionEdit';\r\n\r\nconst SectionEditContainer = (props) => {\r\n  return (\r\n    <SectionEdit id={props.sectionId} editSection={props.editSection} defaultValue={props.defaultValue} confirmEdit={props.confirmEdit}/>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(null, {editSection})(SectionEditContainer);","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './AddTaskForm.scss';\r\n\r\nclass AddTaskForm extends Component {\r\n  state = {\r\n    inputValue: ''\r\n  }\r\n  inputHandler = (e) => {\r\n    this.setState({\r\n      inputValue: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <textarea value={this.state.inputValue} onChange={this.inputHandler} className=\"task__input\" placeholder=\"Enter your task here\"></textarea>\r\n        <div className=\"btn__container\">\r\n          <button className=\"confirm__btn\" onClick={() => {\r\n            this.props.addTask(this.props.sectionId, this.state.inputValue);\r\n            this.props.toggleAddMode(false);\r\n          }}>\r\n            Add task\r\n          </button>\r\n          <button onClick={() => this.props.toggleAddMode(false)}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTaskForm;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addTask} from '../../../../redux/actions/taskListActions';\r\nimport AddTaskForm from './AddTaskForm';\r\n\r\nconst AddTaskFormContainer = (props) => {\r\n  return (\r\n    <AddTaskForm addTask={props.addTask} toggleAddMode={props.toggleAddMode} sectionId={props.sectionId}/>\r\n  )\r\n}\r\n\r\nexport default connect(null, {addTask})(AddTaskFormContainer);","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass TaskEdit extends Component {\r\n  state = {\r\n    inputValue: this.props.defaultValue\r\n  }\r\n  inputHandler = e => {\r\n    this.setState({\r\n      inputValue: e.target.value\r\n    })\r\n  }  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <textarea value={this.state.inputValue} onChange={this.inputHandler} className=\"task__input\" placeholder=\"Enter your task here\"></textarea>\r\n        <div className=\"btn__container\">\r\n          <button className=\"confirm__btn\" onClick={() => {\r\n            this.props.editTask(this.props.sectionId, this.props.taskIndex, this.state.inputValue);\r\n            this.props.toggleEdit(false);\r\n          }}>\r\n            Add task\r\n          </button>\r\n          <button onClick={() => this.props.toggleEdit(false)}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskEdit;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {editTask} from '../../../../../redux/actions/taskListActions';\r\nimport TaskEdit from './TaskEdit';\r\n\r\nconst TaskEditContainer = (props) => {\r\n  return <TaskEdit taskIndex={props.taskIndex} sectionId={props.sectionId} toggleEdit={props.toggleEdit} \r\n  editTask={props.editTask} defaultValue={props.defaultValue}/>\r\n}\r\n\r\nexport default connect(null, {editTask})(TaskEditContainer);\r\n","import React, {Component} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TaskEditContainer from './TaskEdit/TaskEditContainer';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTrash, faPen} from '@fortawesome/free-solid-svg-icons';\r\nimport './TaskItem.scss';\r\n\r\nclass TaskItem extends Component {\r\n  state = {\r\n    editMode: false\r\n  }\r\n  toggleEditMode = (value) => {\r\n    this.setState({\r\n      editMode: value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n      {this.state.editMode ? <TaskEditContainer taskIndex={this.props.index} sectionId={this.props.sectionId} toggleEdit={this.toggleEditMode} defaultValue={this.props.title}/> : <Card className=\"taskitem__container\">\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h5\">\r\n            {this.props.title}\r\n          </Typography>\r\n          <div className=\"btn__container\">\r\n            <button><FontAwesomeIcon icon={faPen} onClick={() => this.toggleEditMode(true)}/></button>\r\n            <button><FontAwesomeIcon icon={faTrash} onClick={() => this.props.deleteTask(this.props.sectionId, this.props.index)} /></button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteTask, editTask} from '../../../../redux/actions/taskListActions';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst TaskItemContainer = (props) => {\r\n  return (\r\n    <TaskItem deleteTask={props.deleteTask} index={props.index} editTask={props.editTask} title={props.title} id={props.id} sectionId={props.sectionId}/>\r\n  )\r\n}\r\n\r\nexport default connect(null, {deleteTask, editTask})(TaskItemContainer);\r\n\r\n","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEllipsisH} from '@fortawesome/free-solid-svg-icons';\r\nimport SectionOptionsContainer from './SectionOptions/SectionOptionsContainer';\r\nimport SectionEditContainer from './SectionEdit/SectionEditContainer';\r\nimport './TaskSection.scss';\r\nimport AddTaskFormContainer from './AddTaskForm/AddTaskFormContainer';\r\nimport TaskItemContainer from './TaskItem/TaskItemContainer';\r\n\r\nclass TaskSection extends Component {\r\n  state = {\r\n    add: false,\r\n    options: false,\r\n    edit: false\r\n  }\r\n  toggleEditMode = (value) => {\r\n    this.setState({edit: value})\r\n  }\r\n  toggleOptions = (value) => {\r\n    this.setState({options: value})\r\n  }\r\n  toggleAddMode = (value) => {\r\n    this.setState({\r\n      add: value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"tasksection\">\r\n        <div className=\"tasksection__heading\">\r\n          {this.state.edit ? <SectionEditContainer confirmEdit={this.toggleEditMode} sectionId={this.props.id} defaultValue={this.props.heading}/> : \r\n            <>\r\n              <h5 className=\"tasksection__title\">{this.props.heading}</h5>\r\n              <button onClick={() => this.setState({options: !this.state.options})} className=\"options__btn\">\r\n                <FontAwesomeIcon icon={faEllipsisH} /> \r\n              </button>\r\n            </>\r\n          }\r\n          {this.state.options && <SectionOptionsContainer sectionId={this.props.id} editMode={this.toggleEditMode} hideOptions={this.toggleOptions}/>}\r\n        </div>\r\n        <div className=\"task__container\">\r\n          {this.props.tasks.map((item, index) => <TaskItemContainer title={item} index={index} sectionId={this.props.id}/>)}\r\n        </div>\r\n        {this.state.add ? <AddTaskFormContainer toggleAddMode={this.toggleAddMode} sectionId={this.props.id}/> : <button className=\"add__btn add__btn--task\" onClick={() => this.toggleAddMode(true)}>Add task</button>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskSection;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport TaskSection from './TaskSection';\r\n\r\nconst TaskSectionContainer = (props) => {\r\n  return (\r\n    <TaskSection heading={props.heading} id={props.id} index={props.index} tasks={props.tasks[props.index].tasks}/>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks.sections\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TaskSectionContainer)","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './TaskListForm.scss';\r\n\r\nclass TaskListForm extends Component {\r\n  state = {\r\n    sectionName: ''\r\n  }\r\n  inputHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  addSection = () => {\r\n    this.props.addSection(this.state.sectionName);\r\n    this.props.goToDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"sectionform__container\">\r\n        <textarea onChange={this.inputHandler} name=\"sectionName\" value={this.state.sectionName} placeholder=\"Enter the name of your section here\" className=\"section__input\"></textarea>\r\n        <div className=\"btn__container\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.addSection}>Create a section</Button>\r\n          <button className=\"cancel__btn\" onClick={() => this.props.cancelAdd()}><FontAwesomeIcon icon={faTimes} /></button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskListForm;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addSection} from '../../../redux/actions/taskListActions';\r\nimport TaskListForm from './TaskListForm';\r\n\r\nconst TaskListFormContainer = (props) => {\r\n  return (\r\n    <TaskListForm addSection={props.addSection} goToDefault={props.goToDefault} cancelAdd={props.cancelAdd}/>\r\n  )\r\n}\r\n\r\nexport default connect(null, {addSection})(TaskListFormContainer);","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPowerOff} from '@fortawesome/free-solid-svg-icons';\r\nimport TaskSectionContainer from './TaskSection/TaskSectionContainer';\r\nimport TaskListFormContainer from './TaskListForm/TaskListFormContainer';\r\nimport Container from '@material-ui/core/Container';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport './TaskList.scss';\r\n\r\nclass TaskList extends Component {\r\n  state = {\r\n    add: false\r\n  }\r\n  addSection = () => {\r\n    this.setState({\r\n      add: !this.state.add\r\n    })\r\n  }\r\n  render() {\r\n    const StyledContainer = withStyles((theme => ({\r\n      root: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        width: this.props.sections.length < 5 ? '100%' : this.props.sections.length * 340,\r\n        [theme.breakpoints.down(700)]: {\r\n          width: this.props.sections.length > 1 ? this.props.sections.length * 340 : '100%',\r\n        },\r\n        height: '100vh',\r\n        backgroundImage: 'url(\"https://embedwistia-a.akamaihd.net/deliveries/d5ae8190f0aa7dfbe0b01f336f29d44094b967b5.webp?image_crop_resized=1280x720\")',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundAttachment: 'fixed',\r\n        overflowY: 'hidden'\r\n      }\r\n    })))(Container)\r\n    return (\r\n      <>\r\n        <header className=\"tasklist__header\">\r\n          <div className=\"tasklist__personal\">\r\n            <Avatar>{this.props.firstName[0].toUpperCase() + this.props.lastName[0].toUpperCase()}</Avatar>\r\n            <h5 className=\"personal__name\">{this.props.firstName + ' ' + this.props.lastName}</h5>\r\n          </div>\r\n          <button className=\"logout__btn\" onClick={() => {\r\n            this.props.logOut();\r\n          }}>\r\n            <FontAwesomeIcon icon={faPowerOff} />\r\n          </button>\r\n        </header>\r\n        <div className=\"tasklist__background\">\r\n          <StyledContainer maxWidth=\"xl\" className=\"tasklist__content\">\r\n            {this.props.sections.map((item, index) => <TaskSectionContainer heading={item.name} id={item.id} index={index}/>)}\r\n            {this.state.add ? <TaskListFormContainer goToDefault={this.addSection} cancelAdd={this.addSection}/> : <button onClick={this.addSection} className=\"add__btn\">Add section</button>}\r\n          </StyledContainer>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logOut} from '../../redux/actions/taskListActions';\r\nimport TaskList from './TaskList';\r\n\r\nconst TaskListContainer = (props) => {\r\n  return (\r\n    <TaskList logOut={props.logOut} sections={props.sections} firstName={props.firstName} lastName={props.lastName}/>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sections: state.tasks.sections,\r\n    firstName: state.tasks.currentFirstName,\r\n    lastName: state.tasks.currentLastName\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {logOut})(TaskListContainer);\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Authorize from './components/Authorize/Authorize';\nimport PrivateRoute from './PrivateRoute';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './redux/reducers/rootReducer';\nimport TaskListContainer from './components/TaskList/TaskListContainer';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst App = (props) => {\n  return (\n  <Provider store={store}>\n    <Router basename=\"/Task-Manager\">\n      <Switch>\n        <Route exact path=\"/\" component={Authorize} status={props.online}/>\n        <PrivateRoute path=\"/dashboard\" component={TaskListContainer} />\n      </Switch>\n    </Router>\n  </Provider>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}